# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'sms.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import pymysql
from datetime import date


class Ui_MainWindow(object):
    def __init__(self, db):
        self.db = db
        self.cursor = db.cursor()

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(930, 794)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setGeometry(QtCore.QRect(10, 20, 751, 191))
        self.stackedWidget.setFrameShape(QtWidgets.QFrame.Panel)
        self.stackedWidget.setFrameShadow(QtWidgets.QFrame.Plain)
        self.stackedWidget.setObjectName("stackedWidget")
        self.page_student = QtWidgets.QWidget()
        self.page_student.setObjectName("page_student")
        self.lineEdit_sid = QtWidgets.QLineEdit(self.page_student)
        self.lineEdit_sid.setGeometry(QtCore.QRect(100, 80, 131, 31))
        self.lineEdit_sid.setObjectName("lineEdit_sid")
        self.lineEdit_sclass = QtWidgets.QLineEdit(self.page_student)
        self.lineEdit_sclass.setGeometry(QtCore.QRect(100, 140, 131, 31))
        self.lineEdit_sclass.setObjectName("lineEdit_sclass")
        self.lineEdit_ssex = QtWidgets.QLineEdit(self.page_student)
        self.lineEdit_ssex.setGeometry(QtCore.QRect(600, 80, 131, 31))
        self.lineEdit_ssex.setObjectName("lineEdit_ssex")
        self.lineEdit_sname = QtWidgets.QLineEdit(self.page_student)
        self.lineEdit_sname.setGeometry(QtCore.QRect(340, 140, 131, 31))
        self.lineEdit_sname.setObjectName("lineEdit_sname")
        self.lineEdit_stel = QtWidgets.QLineEdit(self.page_student)
        self.lineEdit_stel.setGeometry(QtCore.QRect(600, 140, 131, 31))
        self.lineEdit_stel.setObjectName("lineEdit_stel")
        self.label_sid = QtWidgets.QLabel(self.page_student)
        self.label_sid.setGeometry(QtCore.QRect(40, 80, 51, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_sid.setFont(font)
        self.label_sid.setObjectName("label_sid")
        self.label_sclass = QtWidgets.QLabel(self.page_student)
        self.label_sclass.setGeometry(QtCore.QRect(40, 140, 51, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_sclass.setFont(font)
        self.label_sclass.setObjectName("label_sclass")
        self.label_sage = QtWidgets.QLabel(self.page_student)
        self.label_sage.setGeometry(QtCore.QRect(270, 80, 51, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_sage.setFont(font)
        self.label_sage.setObjectName("label_sage")
        self.label_sname = QtWidgets.QLabel(self.page_student)
        self.label_sname.setGeometry(QtCore.QRect(270, 140, 51, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_sname.setFont(font)
        self.label_sname.setObjectName("label_sname")
        self.label_ssex = QtWidgets.QLabel(self.page_student)
        self.label_ssex.setGeometry(QtCore.QRect(536, 80, 51, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_ssex.setFont(font)
        self.label_ssex.setObjectName("label_ssex")
        self.label_stel = QtWidgets.QLabel(self.page_student)
        self.label_stel.setGeometry(QtCore.QRect(500, 140, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_stel.setFont(font)
        self.label_stel.setObjectName("label_stel")
        self.lineEdit_sage = QtWidgets.QLineEdit(self.page_student)
        self.lineEdit_sage.setGeometry(QtCore.QRect(340, 80, 131, 31))
        self.lineEdit_sage.setObjectName("lineEdit_sage")
        self.label_student = QtWidgets.QLabel(self.page_student)
        self.label_student.setGeometry(QtCore.QRect(0, 0, 751, 51))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(22)
        font.setBold(False)
        font.setWeight(50)
        self.label_student.setFont(font)
        self.label_student.setAlignment(QtCore.Qt.AlignCenter)
        self.label_student.setObjectName("label_student")
        self.comboBox_student = QtWidgets.QComboBox(self.page_student)
        self.comboBox_student.setGeometry(QtCore.QRect(570, 18, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.comboBox_student.setFont(font)
        self.comboBox_student.setObjectName("comboBox_student")
        self.comboBox_student.addItem("")
        self.comboBox_student.addItem("")
        self.comboBox_student.addItem("")
        self.label_student_combo = QtWidgets.QLabel(self.page_student)
        self.label_student_combo.setGeometry(QtCore.QRect(520, 23, 41, 21))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_student_combo.setFont(font)
        self.label_student_combo.setObjectName("label_student_combo")
        self.stackedWidget.addWidget(self.page_student)
        self.page_teacher = QtWidgets.QWidget()
        self.page_teacher.setObjectName("page_teacher")
        self.label_tid = QtWidgets.QLabel(self.page_teacher)
        self.label_tid.setGeometry(QtCore.QRect(4, 80, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_tid.setFont(font)
        self.label_tid.setObjectName("label_tid")
        self.lineEdit_tid = QtWidgets.QLineEdit(self.page_teacher)
        self.lineEdit_tid.setGeometry(QtCore.QRect(100, 80, 131, 31))
        self.lineEdit_tid.setObjectName("lineEdit_tid")
        self.lineEdit_tdid = QtWidgets.QLineEdit(self.page_teacher)
        self.lineEdit_tdid.setGeometry(QtCore.QRect(100, 140, 131, 31))
        self.lineEdit_tdid.setObjectName("lineEdit_tdid")
        self.label_tdid = QtWidgets.QLabel(self.page_teacher)
        self.label_tdid.setGeometry(QtCore.QRect(40, 140, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_tdid.setFont(font)
        self.label_tdid.setObjectName("label_tdid")
        self.label_tage = QtWidgets.QLabel(self.page_teacher)
        self.label_tage.setGeometry(QtCore.QRect(270, 80, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_tage.setFont(font)
        self.label_tage.setObjectName("label_tage")
        self.lineEdit_tname = QtWidgets.QLineEdit(self.page_teacher)
        self.lineEdit_tname.setGeometry(QtCore.QRect(340, 140, 131, 31))
        self.lineEdit_tname.setObjectName("lineEdit_tname")
        self.label_tname = QtWidgets.QLabel(self.page_teacher)
        self.label_tname.setGeometry(QtCore.QRect(270, 140, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_tname.setFont(font)
        self.label_tname.setObjectName("label_tname")
        self.lineEdit_tsex = QtWidgets.QLineEdit(self.page_teacher)
        self.lineEdit_tsex.setGeometry(QtCore.QRect(600, 80, 131, 31))
        self.lineEdit_tsex.setObjectName("lineEdit_tsex")
        self.label_tsex = QtWidgets.QLabel(self.page_teacher)
        self.label_tsex.setGeometry(QtCore.QRect(536, 80, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_tsex.setFont(font)
        self.label_tsex.setObjectName("label_tsex")
        self.lineEdit_ttel = QtWidgets.QLineEdit(self.page_teacher)
        self.lineEdit_ttel.setGeometry(QtCore.QRect(600, 140, 131, 31))
        self.lineEdit_ttel.setObjectName("lineEdit_ttel")
        self.label_ttel = QtWidgets.QLabel(self.page_teacher)
        self.label_ttel.setGeometry(QtCore.QRect(500, 140, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_ttel.setFont(font)
        self.label_ttel.setObjectName("label_ttel")
        self.lineEdit_tage = QtWidgets.QLineEdit(self.page_teacher)
        self.lineEdit_tage.setGeometry(QtCore.QRect(340, 80, 131, 31))
        self.lineEdit_tage.setObjectName("lineEdit_tage")
        self.label_teacher = QtWidgets.QLabel(self.page_teacher)
        self.label_teacher.setGeometry(QtCore.QRect(0, 3, 751, 41))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(22)
        font.setBold(False)
        font.setWeight(50)
        self.label_teacher.setFont(font)
        self.label_teacher.setAlignment(QtCore.Qt.AlignCenter)
        self.label_teacher.setObjectName("label_teacher")
        self.label_teacher_combo = QtWidgets.QLabel(self.page_teacher)
        self.label_teacher_combo.setGeometry(QtCore.QRect(520, 23, 41, 21))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_teacher_combo.setFont(font)
        self.label_teacher_combo.setObjectName("label_teacher_combo")
        self.comboBox_teacher = QtWidgets.QComboBox(self.page_teacher)
        self.comboBox_teacher.setGeometry(QtCore.QRect(570, 18, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.comboBox_teacher.setFont(font)
        self.comboBox_teacher.setObjectName("comboBox_teacher")
        self.comboBox_teacher.addItem("")
        self.comboBox_teacher.addItem("")
        self.comboBox_teacher.addItem("")
        self.label_teacher.raise_()
        self.label_tid.raise_()
        self.lineEdit_tid.raise_()
        self.lineEdit_tdid.raise_()
        self.label_tdid.raise_()
        self.label_tage.raise_()
        self.lineEdit_tname.raise_()
        self.label_tname.raise_()
        self.lineEdit_tsex.raise_()
        self.label_tsex.raise_()
        self.lineEdit_ttel.raise_()
        self.label_ttel.raise_()
        self.lineEdit_tage.raise_()
        self.label_teacher_combo.raise_()
        self.comboBox_teacher.raise_()
        self.stackedWidget.addWidget(self.page_teacher)
        self.page_course = QtWidgets.QWidget()
        self.page_course.setObjectName("page_course")
        self.lineEdit_cname = QtWidgets.QLineEdit(self.page_course)
        self.lineEdit_cname.setGeometry(QtCore.QRect(410, 80, 271, 31))
        self.lineEdit_cname.setObjectName("lineEdit_cname")
        self.label_cid = QtWidgets.QLabel(self.page_course)
        self.label_cid.setGeometry(QtCore.QRect(25, 80, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_cid.setFont(font)
        self.label_cid.setObjectName("label_cid")
        self.label_hours = QtWidgets.QLabel(self.page_course)
        self.label_hours.setGeometry(QtCore.QRect(520, 140, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_hours.setFont(font)
        self.label_hours.setObjectName("label_hours")
        self.lineEdit_cid = QtWidgets.QLineEdit(self.page_course)
        self.lineEdit_cid.setGeometry(QtCore.QRect(120, 80, 131, 31))
        self.lineEdit_cid.setObjectName("lineEdit_cid")
        self.label_credit = QtWidgets.QLabel(self.page_course)
        self.label_credit.setGeometry(QtCore.QRect(350, 140, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_credit.setFont(font)
        self.label_credit.setObjectName("label_credit")
        self.label_cname = QtWidgets.QLabel(self.page_course)
        self.label_cname.setGeometry(QtCore.QRect(313, 80, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_cname.setFont(font)
        self.label_cname.setObjectName("label_cname")
        self.lineEdit_credit = QtWidgets.QLineEdit(self.page_course)
        self.lineEdit_credit.setGeometry(QtCore.QRect(410, 140, 91, 31))
        self.lineEdit_credit.setObjectName("lineEdit_credit")
        self.label_cdid = QtWidgets.QLabel(self.page_course)
        self.label_cdid.setGeometry(QtCore.QRect(10, 140, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_cdid.setFont(font)
        self.label_cdid.setObjectName("label_cdid")
        self.lineEdit_cdid = QtWidgets.QLineEdit(self.page_course)
        self.lineEdit_cdid.setGeometry(QtCore.QRect(120, 140, 131, 31))
        self.lineEdit_cdid.setObjectName("lineEdit_cdid")
        self.lineEdit_hours = QtWidgets.QLineEdit(self.page_course)
        self.lineEdit_hours.setGeometry(QtCore.QRect(580, 140, 101, 31))
        self.lineEdit_hours.setObjectName("lineEdit_hours")
        self.label_course = QtWidgets.QLabel(self.page_course)
        self.label_course.setGeometry(QtCore.QRect(0, 6, 751, 41))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(22)
        font.setBold(False)
        font.setWeight(50)
        self.label_course.setFont(font)
        self.label_course.setAlignment(QtCore.Qt.AlignCenter)
        self.label_course.setObjectName("label_course")
        self.label_course_combo = QtWidgets.QLabel(self.page_course)
        self.label_course_combo.setGeometry(QtCore.QRect(520, 23, 41, 21))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_course_combo.setFont(font)
        self.label_course_combo.setObjectName("label_course_combo")
        self.comboBox_course = QtWidgets.QComboBox(self.page_course)
        self.comboBox_course.setGeometry(QtCore.QRect(570, 18, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.comboBox_course.setFont(font)
        self.comboBox_course.setObjectName("comboBox_course")
        self.comboBox_course.addItem("")
        self.comboBox_course.addItem("")
        self.comboBox_course.addItem("")
        self.label_course.raise_()
        self.lineEdit_cname.raise_()
        self.label_cid.raise_()
        self.label_hours.raise_()
        self.lineEdit_cid.raise_()
        self.label_credit.raise_()
        self.label_cname.raise_()
        self.lineEdit_credit.raise_()
        self.label_cdid.raise_()
        self.lineEdit_cdid.raise_()
        self.lineEdit_hours.raise_()
        self.label_course_combo.raise_()
        self.comboBox_course.raise_()
        self.stackedWidget.addWidget(self.page_course)
        self.page_class = QtWidgets.QWidget()
        self.page_class.setObjectName("page_class")
        self.label_clid = QtWidgets.QLabel(self.page_class)
        self.label_clid.setGeometry(QtCore.QRect(20, 110, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_clid.setFont(font)
        self.label_clid.setObjectName("label_clid")
        self.label_cltid = QtWidgets.QLabel(self.page_class)
        self.label_cltid.setGeometry(QtCore.QRect(470, 110, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_cltid.setFont(font)
        self.label_cltid.setObjectName("label_cltid")
        self.label_cldid = QtWidgets.QLabel(self.page_class)
        self.label_cldid.setGeometry(QtCore.QRect(240, 110, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_cldid.setFont(font)
        self.label_cldid.setObjectName("label_cldid")
        self.lineEdit_cldid = QtWidgets.QLineEdit(self.page_class)
        self.lineEdit_cldid.setGeometry(QtCore.QRect(300, 110, 131, 31))
        self.lineEdit_cldid.setObjectName("lineEdit_cldid")
        self.lineEdit_cltid = QtWidgets.QLineEdit(self.page_class)
        self.lineEdit_cltid.setGeometry(QtCore.QRect(580, 110, 131, 31))
        self.lineEdit_cltid.setObjectName("lineEdit_cltid")
        self.lineEdit_clid = QtWidgets.QLineEdit(self.page_class)
        self.lineEdit_clid.setGeometry(QtCore.QRect(80, 110, 131, 31))
        self.lineEdit_clid.setObjectName("lineEdit_clid")
        self.label_class = QtWidgets.QLabel(self.page_class)
        self.label_class.setGeometry(QtCore.QRect(0, 3, 751, 51))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(22)
        font.setBold(False)
        font.setWeight(50)
        self.label_class.setFont(font)
        self.label_class.setAlignment(QtCore.Qt.AlignCenter)
        self.label_class.setObjectName("label_class")
        self.label_class_combo = QtWidgets.QLabel(self.page_class)
        self.label_class_combo.setGeometry(QtCore.QRect(520, 23, 41, 21))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_class_combo.setFont(font)
        self.label_class_combo.setObjectName("label_class_combo")
        self.comboBox_class = QtWidgets.QComboBox(self.page_class)
        self.comboBox_class.setGeometry(QtCore.QRect(570, 18, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.comboBox_class.setFont(font)
        self.comboBox_class.setObjectName("comboBox_class")
        self.comboBox_class.addItem("")
        self.comboBox_class.addItem("")
        self.comboBox_class.addItem("")
        self.stackedWidget.addWidget(self.page_class)
        self.page_department = QtWidgets.QWidget()
        self.page_department.setObjectName("page_department")
        self.label_dname = QtWidgets.QLabel(self.page_department)
        self.label_dname.setGeometry(QtCore.QRect(380, 100, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_dname.setFont(font)
        self.label_dname.setObjectName("label_dname")
        self.label_did = QtWidgets.QLabel(self.page_department)
        self.label_did.setGeometry(QtCore.QRect(150, 100, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_did.setFont(font)
        self.label_did.setObjectName("label_did")
        self.lineEdit_dname = QtWidgets.QLineEdit(self.page_department)
        self.lineEdit_dname.setGeometry(QtCore.QRect(474, 100, 131, 31))
        self.lineEdit_dname.setObjectName("lineEdit_dname")
        self.lineEdit_did = QtWidgets.QLineEdit(self.page_department)
        self.lineEdit_did.setGeometry(QtCore.QRect(210, 100, 131, 31))
        self.lineEdit_did.setObjectName("lineEdit_did")
        self.label_department = QtWidgets.QLabel(self.page_department)
        self.label_department.setGeometry(QtCore.QRect(0, 3, 751, 51))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(22)
        font.setBold(False)
        font.setWeight(50)
        self.label_department.setFont(font)
        self.label_department.setAlignment(QtCore.Qt.AlignCenter)
        self.label_department.setObjectName("label_department")
        self.comboBox_department = QtWidgets.QComboBox(self.page_department)
        self.comboBox_department.setGeometry(QtCore.QRect(570, 18, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.comboBox_department.setFont(font)
        self.comboBox_department.setObjectName("comboBox_department")
        self.comboBox_department.addItem("")
        self.comboBox_department.addItem("")
        self.comboBox_department.addItem("")
        self.label_department_combo = QtWidgets.QLabel(self.page_department)
        self.label_department_combo.setGeometry(QtCore.QRect(520, 23, 41, 21))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_department_combo.setFont(font)
        self.label_department_combo.setObjectName("label_department_combo")
        self.stackedWidget.addWidget(self.page_department)
        self.page_classroom = QtWidgets.QWidget()
        self.page_classroom.setObjectName("page_classroom")
        self.lineEdit_raddr = QtWidgets.QLineEdit(self.page_classroom)
        self.lineEdit_raddr.setGeometry(QtCore.QRect(470, 110, 131, 31))
        self.lineEdit_raddr.setObjectName("lineEdit_raddr")
        self.lineEdit_rid = QtWidgets.QLineEdit(self.page_classroom)
        self.lineEdit_rid.setGeometry(QtCore.QRect(220, 110, 131, 31))
        self.lineEdit_rid.setObjectName("lineEdit_rid")
        self.label_rid = QtWidgets.QLabel(self.page_classroom)
        self.label_rid.setGeometry(QtCore.QRect(140, 110, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_rid.setFont(font)
        self.label_rid.setObjectName("label_rid")
        self.label_raddr = QtWidgets.QLabel(self.page_classroom)
        self.label_raddr.setGeometry(QtCore.QRect(380, 110, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_raddr.setFont(font)
        self.label_raddr.setObjectName("label_raddr")
        self.label_classroom = QtWidgets.QLabel(self.page_classroom)
        self.label_classroom.setGeometry(QtCore.QRect(0, 6, 751, 41))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(22)
        font.setBold(False)
        font.setWeight(50)
        self.label_classroom.setFont(font)
        self.label_classroom.setAlignment(QtCore.Qt.AlignCenter)
        self.label_classroom.setObjectName("label_classroom")
        self.label_classroom_combo = QtWidgets.QLabel(self.page_classroom)
        self.label_classroom_combo.setGeometry(QtCore.QRect(520, 23, 41, 21))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_classroom_combo.setFont(font)
        self.label_classroom_combo.setObjectName("label_classroom_combo")
        self.comboBox_classroom = QtWidgets.QComboBox(self.page_classroom)
        self.comboBox_classroom.setGeometry(QtCore.QRect(570, 18, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.comboBox_classroom.setFont(font)
        self.comboBox_classroom.setObjectName("comboBox_classroom")
        self.comboBox_classroom.addItem("")
        self.comboBox_classroom.addItem("")
        self.comboBox_classroom.addItem("")
        self.stackedWidget.addWidget(self.page_classroom)
        self.page_sc = QtWidgets.QWidget()
        self.page_sc.setObjectName("page_sc")
        self.label_sc = QtWidgets.QLabel(self.page_sc)
        self.label_sc.setGeometry(QtCore.QRect(0, 3, 751, 51))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(22)
        font.setBold(False)
        font.setWeight(50)
        self.label_sc.setFont(font)
        self.label_sc.setAlignment(QtCore.Qt.AlignCenter)
        self.label_sc.setObjectName("label_sc")
        self.comboBox_sc = QtWidgets.QComboBox(self.page_sc)
        self.comboBox_sc.setGeometry(QtCore.QRect(570, 18, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.comboBox_sc.setFont(font)
        self.comboBox_sc.setObjectName("comboBox_sc")
        self.comboBox_sc.addItem("")
        self.comboBox_sc.addItem("")
        self.comboBox_sc.addItem("")
        self.label_sc_combo = QtWidgets.QLabel(self.page_sc)
        self.label_sc_combo.setGeometry(QtCore.QRect(530, 23, 41, 21))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_sc_combo.setFont(font)
        self.label_sc_combo.setObjectName("label_sc_combo")
        self.label_scsid = QtWidgets.QLabel(self.page_sc)
        self.label_scsid.setGeometry(QtCore.QRect(150, 110, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_scsid.setFont(font)
        self.label_scsid.setObjectName("label_scsid")
        self.label_sccid = QtWidgets.QLabel(self.page_sc)
        self.label_sccid.setGeometry(QtCore.QRect(400, 110, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_sccid.setFont(font)
        self.label_sccid.setObjectName("label_sccid")
        self.lineEdit_scsid = QtWidgets.QLineEdit(self.page_sc)
        self.lineEdit_scsid.setGeometry(QtCore.QRect(210, 110, 131, 31))
        self.lineEdit_scsid.setObjectName("lineEdit_scsid")
        self.comboBox_sccid = QtWidgets.QComboBox(self.page_sc)
        self.comboBox_sccid.setGeometry(QtCore.QRect(460, 110, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.comboBox_sccid.setFont(font)
        self.comboBox_sccid.setObjectName("comboBox_sccid")
        self.stackedWidget.addWidget(self.page_sc)
        self.page_sc_score = QtWidgets.QWidget()
        self.page_sc_score.setObjectName("page_sc_score")
        self.label_scsid_score = QtWidgets.QLabel(self.page_sc_score)
        self.label_scsid_score.setGeometry(QtCore.QRect(526, 110, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_scsid_score.setFont(font)
        self.label_scsid_score.setObjectName("label_scsid_score")
        self.label_sc_score = QtWidgets.QLabel(self.page_sc_score)
        self.label_sc_score.setGeometry(QtCore.QRect(0, 3, 751, 51))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(22)
        font.setBold(False)
        font.setWeight(50)
        self.label_sc_score.setFont(font)
        self.label_sc_score.setAlignment(QtCore.Qt.AlignCenter)
        self.label_sc_score.setObjectName("label_sc_score")
        self.lineEdit_scscore_score = QtWidgets.QLineEdit(self.page_sc_score)
        self.lineEdit_scscore_score.setGeometry(QtCore.QRect(320, 110, 131, 31))
        self.lineEdit_scscore_score.setObjectName("lineEdit_scscore_score")
        self.label_sccid_score = QtWidgets.QLabel(self.page_sc_score)
        self.label_sccid_score.setGeometry(QtCore.QRect(10, 110, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_sccid_score.setFont(font)
        self.label_sccid_score.setObjectName("label_sccid_score")
        self.label_scscore_score = QtWidgets.QLabel(self.page_sc_score)
        self.label_scscore_score.setGeometry(QtCore.QRect(270, 110, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_scscore_score.setFont(font)
        self.label_scscore_score.setObjectName("label_scscore_score")
        self.comboBox_sccid_score = QtWidgets.QComboBox(self.page_sc_score)
        self.comboBox_sccid_score.setGeometry(QtCore.QRect(80, 110, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.comboBox_sccid_score.setFont(font)
        self.comboBox_sccid_score.setObjectName("comboBox_sccid_score")
        self.lineEdit_scsid_score = QtWidgets.QLineEdit(self.page_sc_score)
        self.lineEdit_scsid_score.setGeometry(QtCore.QRect(580, 110, 131, 31))
        self.lineEdit_scsid_score.setObjectName("lineEdit_scsid_score")
        self.stackedWidget.addWidget(self.page_sc_score)
        self.page_stu_transcript = QtWidgets.QWidget()
        self.page_stu_transcript.setObjectName("page_stu_transcript")
        self.lineEdit_stu_trans_sid = QtWidgets.QLineEdit(self.page_stu_transcript)
        self.lineEdit_stu_trans_sid.setGeometry(QtCore.QRect(250, 80, 131, 31))
        self.lineEdit_stu_trans_sid.setObjectName("lineEdit_stu_trans_sid")
        self.label_stu_trans_sname = QtWidgets.QLabel(self.page_stu_transcript)
        self.label_stu_trans_sname.setGeometry(QtCore.QRect(450, 80, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_stu_trans_sname.setFont(font)
        self.label_stu_trans_sname.setObjectName("label_stu_trans_sname")
        self.label_stu_trans_sid = QtWidgets.QLabel(self.page_stu_transcript)
        self.label_stu_trans_sid.setGeometry(QtCore.QRect(200, 80, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_stu_trans_sid.setFont(font)
        self.label_stu_trans_sid.setObjectName("label_stu_trans_sid")
        self.label_stu_transcript = QtWidgets.QLabel(self.page_stu_transcript)
        self.label_stu_transcript.setGeometry(QtCore.QRect(0, 3, 751, 51))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(22)
        font.setBold(False)
        font.setWeight(50)
        self.label_stu_transcript.setFont(font)
        self.label_stu_transcript.setAlignment(QtCore.Qt.AlignCenter)
        self.label_stu_transcript.setObjectName("label_stu_transcript")
        self.lineEdit_stu_trans_sname = QtWidgets.QLineEdit(self.page_stu_transcript)
        self.lineEdit_stu_trans_sname.setGeometry(QtCore.QRect(500, 80, 131, 31))
        self.lineEdit_stu_trans_sname.setObjectName("lineEdit_stu_trans_sname")
        self.label_stu_transcript_hint = QtWidgets.QLabel(self.page_stu_transcript)
        self.label_stu_transcript_hint.setGeometry(QtCore.QRect(0, 130, 751, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_stu_transcript_hint.setFont(font)
        self.label_stu_transcript_hint.setAlignment(QtCore.Qt.AlignCenter)
        self.label_stu_transcript_hint.setObjectName("label_stu_transcript_hint")
        self.radioButton_have_score = QtWidgets.QRadioButton(self.page_stu_transcript)
        self.radioButton_have_score.setGeometry(QtCore.QRect(40, 80, 121, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.radioButton_have_score.setFont(font)
        self.radioButton_have_score.setObjectName("radioButton_have_score")
        self.stackedWidget.addWidget(self.page_stu_transcript)
        self.page_course_transcript = QtWidgets.QWidget()
        self.page_course_transcript.setObjectName("page_course_transcript")
        self.label_course_trans_cid = QtWidgets.QLabel(self.page_course_transcript)
        self.label_course_trans_cid.setGeometry(QtCore.QRect(100, 80, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_course_trans_cid.setFont(font)
        self.label_course_trans_cid.setObjectName("label_course_trans_cid")
        self.label_course_trans_cname = QtWidgets.QLabel(self.page_course_transcript)
        self.label_course_trans_cname.setGeometry(QtCore.QRect(410, 80, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_course_trans_cname.setFont(font)
        self.label_course_trans_cname.setObjectName("label_course_trans_cname")
        self.lineEdit_course_trans_cname = QtWidgets.QLineEdit(self.page_course_transcript)
        self.lineEdit_course_trans_cname.setGeometry(QtCore.QRect(480, 80, 131, 31))
        self.lineEdit_course_trans_cname.setObjectName("lineEdit_course_trans_cname")
        self.lineEdit_course_trans_cid = QtWidgets.QLineEdit(self.page_course_transcript)
        self.lineEdit_course_trans_cid.setGeometry(QtCore.QRect(170, 80, 131, 31))
        self.lineEdit_course_trans_cid.setObjectName("lineEdit_course_trans_cid")
        self.label_course_transcript = QtWidgets.QLabel(self.page_course_transcript)
        self.label_course_transcript.setGeometry(QtCore.QRect(0, 7, 751, 41))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(22)
        font.setBold(False)
        font.setWeight(50)
        self.label_course_transcript.setFont(font)
        self.label_course_transcript.setAlignment(QtCore.Qt.AlignCenter)
        self.label_course_transcript.setObjectName("label_course_transcript")
        self.label_course_transcript_hint = QtWidgets.QLabel(self.page_course_transcript)
        self.label_course_transcript_hint.setGeometry(QtCore.QRect(0, 130, 751, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.label_course_transcript_hint.setFont(font)
        self.label_course_transcript_hint.setAlignment(QtCore.Qt.AlignCenter)
        self.label_course_transcript_hint.setObjectName("label_course_transcript_hint")
        self.stackedWidget.addWidget(self.page_course_transcript)
        self.page_tt = QtWidgets.QWidget()
        self.page_tt.setObjectName("page_tt")
        self.comboBox_tt = QtWidgets.QComboBox(self.page_tt)
        self.comboBox_tt.setGeometry(QtCore.QRect(570, 18, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.comboBox_tt.setFont(font)
        self.comboBox_tt.setObjectName("comboBox_tt")
        self.comboBox_tt.addItem("")
        self.comboBox_tt.addItem("")
        self.comboBox_tt.addItem("")
        self.label_tt = QtWidgets.QLabel(self.page_tt)
        self.label_tt.setGeometry(QtCore.QRect(0, 3, 751, 41))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(22)
        font.setBold(False)
        font.setWeight(50)
        self.label_tt.setFont(font)
        self.label_tt.setAlignment(QtCore.Qt.AlignCenter)
        self.label_tt.setObjectName("label_tt")
        self.label_tt_combo = QtWidgets.QLabel(self.page_tt)
        self.label_tt_combo.setGeometry(QtCore.QRect(520, 23, 41, 21))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_tt_combo.setFont(font)
        self.label_tt_combo.setObjectName("label_tt_combo")
        self.label_tttid = QtWidgets.QLabel(self.page_tt)
        self.label_tttid.setGeometry(QtCore.QRect(400, 80, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_tttid.setFont(font)
        self.label_tttid.setObjectName("label_tttid")
        self.comboBox_ttcid = QtWidgets.QComboBox(self.page_tt)
        self.comboBox_ttcid.setGeometry(QtCore.QRect(190, 80, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.comboBox_ttcid.setFont(font)
        self.comboBox_ttcid.setObjectName("comboBox_ttcid")
        self.label_ttcid = QtWidgets.QLabel(self.page_tt)
        self.label_ttcid.setGeometry(QtCore.QRect(120, 80, 61, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_ttcid.setFont(font)
        self.label_ttcid.setObjectName("label_ttcid")
        self.comboBox_tttid = QtWidgets.QComboBox(self.page_tt)
        self.comboBox_tttid.setGeometry(QtCore.QRect(490, 80, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.comboBox_tttid.setFont(font)
        self.comboBox_tttid.setObjectName("comboBox_tttid")
        self.lineEdit_startweek = QtWidgets.QLineEdit(self.page_tt)
        self.lineEdit_startweek.setGeometry(QtCore.QRect(190, 140, 131, 31))
        self.lineEdit_startweek.setObjectName("lineEdit_startweek")
        self.label_tt_startweek = QtWidgets.QLabel(self.page_tt)
        self.label_tt_startweek.setGeometry(QtCore.QRect(100, 140, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_tt_startweek.setFont(font)
        self.label_tt_startweek.setObjectName("label_tt_startweek")
        self.lineEdit_endweek = QtWidgets.QLineEdit(self.page_tt)
        self.lineEdit_endweek.setGeometry(QtCore.QRect(490, 140, 131, 31))
        self.lineEdit_endweek.setObjectName("lineEdit_endweek")
        self.label_tt_endweek = QtWidgets.QLabel(self.page_tt)
        self.label_tt_endweek.setGeometry(QtCore.QRect(400, 140, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_tt_endweek.setFont(font)
        self.label_tt_endweek.setObjectName("label_tt_endweek")
        self.label_tt.raise_()
        self.comboBox_tt.raise_()
        self.label_tt_combo.raise_()
        self.label_tttid.raise_()
        self.comboBox_ttcid.raise_()
        self.label_ttcid.raise_()
        self.comboBox_tttid.raise_()
        self.lineEdit_startweek.raise_()
        self.label_tt_startweek.raise_()
        self.lineEdit_endweek.raise_()
        self.label_tt_endweek.raise_()
        self.stackedWidget.addWidget(self.page_tt)
        self.page_ttr = QtWidgets.QWidget()
        self.page_ttr.setObjectName("page_ttr")
        self.label_ttrdayno = QtWidgets.QLabel(self.page_ttr)
        self.label_ttrdayno.setGeometry(QtCore.QRect(450, 80, 51, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_ttrdayno.setFont(font)
        self.label_ttrdayno.setObjectName("label_ttrdayno")
        self.comboBox_ttr = QtWidgets.QComboBox(self.page_ttr)
        self.comboBox_ttr.setGeometry(QtCore.QRect(570, 18, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.comboBox_ttr.setFont(font)
        self.comboBox_ttr.setObjectName("comboBox_ttr")
        self.comboBox_ttr.addItem("")
        self.comboBox_ttr.addItem("")
        self.comboBox_ttr.addItem("")
        self.label_ttrrid = QtWidgets.QLabel(self.page_ttr)
        self.label_ttrrid.setGeometry(QtCore.QRect(420, 140, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_ttrrid.setFont(font)
        self.label_ttrrid.setObjectName("label_ttrrid")
        self.label_ttr_combo = QtWidgets.QLabel(self.page_ttr)
        self.label_ttr_combo.setGeometry(QtCore.QRect(530, 23, 41, 21))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_ttr_combo.setFont(font)
        self.label_ttr_combo.setObjectName("label_ttr_combo")
        self.comboBox_ttr_cidtid = QtWidgets.QComboBox(self.page_ttr)
        self.comboBox_ttr_cidtid.setGeometry(QtCore.QRect(170, 80, 221, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.comboBox_ttr_cidtid.setFont(font)
        self.comboBox_ttr_cidtid.setObjectName("comboBox_ttr_cidtid")
        self.label_ttr = QtWidgets.QLabel(self.page_ttr)
        self.label_ttr.setGeometry(QtCore.QRect(0, 3, 751, 41))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(22)
        font.setBold(False)
        font.setWeight(50)
        self.label_ttr.setFont(font)
        self.label_ttr.setAlignment(QtCore.Qt.AlignCenter)
        self.label_ttr.setObjectName("label_ttr")
        self.label_ttr_cidtid = QtWidgets.QLabel(self.page_ttr)
        self.label_ttr_cidtid.setGeometry(QtCore.QRect(20, 80, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_ttr_cidtid.setFont(font)
        self.label_ttr_cidtid.setObjectName("label_ttr_cidtid")
        self.comboBox_ttrdayno = QtWidgets.QComboBox(self.page_ttr)
        self.comboBox_ttrdayno.setGeometry(QtCore.QRect(500, 80, 31, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.comboBox_ttrdayno.setFont(font)
        self.comboBox_ttrdayno.setObjectName("comboBox_ttrdayno")
        self.comboBox_ttrdayno.addItem("")
        self.comboBox_ttrdayno.setItemText(0, "")
        self.comboBox_ttrdayno.addItem("")
        self.comboBox_ttrdayno.addItem("")
        self.comboBox_ttrdayno.addItem("")
        self.comboBox_ttrdayno.addItem("")
        self.comboBox_ttrdayno.addItem("")
        self.comboBox_ttrdayno.addItem("")
        self.comboBox_ttrdayno.addItem("")
        self.comboBox_ttrclassno = QtWidgets.QComboBox(self.page_ttr)
        self.comboBox_ttrclassno.setGeometry(QtCore.QRect(170, 140, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.comboBox_ttrclassno.setFont(font)
        self.comboBox_ttrclassno.setObjectName("comboBox_ttrclassno")
        self.comboBox_ttrclassno.addItem("")
        self.comboBox_ttrclassno.setItemText(0, "")
        self.comboBox_ttrclassno.addItem("")
        self.comboBox_ttrclassno.addItem("")
        self.comboBox_ttrclassno.addItem("")
        self.comboBox_ttrclassno.addItem("")
        self.comboBox_ttrclassno.addItem("")
        self.comboBox_ttrclassno.addItem("")
        self.label_ttrclassno = QtWidgets.QLabel(self.page_ttr)
        self.label_ttrclassno.setGeometry(QtCore.QRect(120, 140, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft YaHei UI")
        font.setPointSize(11)
        self.label_ttrclassno.setFont(font)
        self.label_ttrclassno.setObjectName("label_ttrclassno")
        self.comboBox_ttrrid = QtWidgets.QComboBox(self.page_ttr)
        self.comboBox_ttrrid.setGeometry(QtCore.QRect(500, 140, 221, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        self.comboBox_ttrrid.setFont(font)
        self.comboBox_ttrrid.setObjectName("comboBox_ttrrid")
        self.stackedWidget.addWidget(self.page_ttr)
        self.pushButton_confirm = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_confirm.setGeometry(QtCore.QRect(790, 60, 121, 51))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei UI")
        font.setPointSize(11)
        self.pushButton_confirm.setFont(font)
        self.pushButton_confirm.setObjectName("pushButton_confirm")
        self.pushButton_confirm.clicked.connect(self.confirm)

        self.pushButton_clear = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_clear.setGeometry(QtCore.QRect(790, 130, 121, 51))
        font = QtGui.QFont()
        font.setFamily("Microsoft JhengHei UI")
        font.setPointSize(11)
        self.pushButton_clear.setFont(font)
        self.pushButton_clear.setObjectName("pushButton_clear")
        self.pushButton_clear.clicked.connect(self.clear)

        self.tableView = QtWidgets.QTableView(self.centralwidget)
        self.tableView.setGeometry(QtCore.QRect(10, 240, 901, 491))
        self.tableView.setObjectName("tableView")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 930, 26))
        self.menubar.setObjectName("menubar")
        self.menu_base = QtWidgets.QMenu(self.menubar)
        self.menu_base.setObjectName("menu_base")
        self.menu_others = QtWidgets.QMenu(self.menubar)
        self.menu_others.setObjectName("menu_others")
        MainWindow.setMenuBar(self.menubar)
        self.action_student = QtWidgets.QAction(MainWindow)
        self.action_student.setCheckable(False)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/student.png"), QtGui.QIcon.Selected, QtGui.QIcon.On)
        self.action_student.setIcon(icon)
        self.action_student.setObjectName("action_student")
        self.action_teacher = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("icons/teacher.png"), QtGui.QIcon.Selected, QtGui.QIcon.On)
        self.action_teacher.setIcon(icon1)
        self.action_teacher.setObjectName("action_teacher")
        self.action_course = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("icons/course.png"), QtGui.QIcon.Selected, QtGui.QIcon.On)
        self.action_course.setIcon(icon2)
        self.action_course.setObjectName("action_course")
        self.action_class = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("icons/class.png"), QtGui.QIcon.Selected, QtGui.QIcon.On)
        self.action_class.setIcon(icon3)
        self.action_class.setObjectName("action_class")
        self.action_department = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("icons/department.png"), QtGui.QIcon.Selected, QtGui.QIcon.On)
        self.action_department.setIcon(icon4)
        self.action_department.setObjectName("action_department")
        self.action_classroom = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("icons/classroom.png"), QtGui.QIcon.Selected, QtGui.QIcon.On)
        self.action_classroom.setIcon(icon5)
        self.action_classroom.setObjectName("action_classroom")
        self.action_sc = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("icons/sc.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_sc.setIcon(icon6)
        self.action_sc.setObjectName("action_sc")
        self.action_sc_score = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("icons/sc_score.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_sc_score.setIcon(icon7)
        self.action_sc_score.setObjectName("action_sc_score")
        self.action_stu_transcript = QtWidgets.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("icons/student_transcript.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_stu_transcript.setIcon(icon8)
        self.action_stu_transcript.setObjectName("action_stu_transcript")
        self.action_course_transcript = QtWidgets.QAction(MainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("icons/course_transcript.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_course_transcript.setIcon(icon9)
        self.action_course_transcript.setObjectName("action_course_transcript")
        self.action_tt = QtWidgets.QAction(MainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("icons/tt.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_tt.setIcon(icon10)
        self.action_tt.setObjectName("action_tt")
        self.action_ttr = QtWidgets.QAction(MainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("icons/ttr.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_ttr.setIcon(icon11)
        self.action_ttr.setObjectName("action_ttr")
        self.menu_base.addAction(self.action_student)
        self.menu_base.addAction(self.action_teacher)
        self.menu_base.addAction(self.action_course)
        self.menu_base.addAction(self.action_class)
        self.menu_base.addAction(self.action_department)
        self.menu_base.addAction(self.action_classroom)
        self.menu_others.addAction(self.action_sc)
        self.menu_others.addAction(self.action_sc_score)
        self.menu_others.addAction(self.action_stu_transcript)
        self.menu_others.addAction(self.action_course_transcript)
        self.menu_others.addAction(self.action_tt)
        self.menu_others.addAction(self.action_ttr)
        self.menubar.addAction(self.menu_base.menuAction())
        self.menubar.addAction(self.menu_others.menuAction())

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_sid.setText(_translate("MainWindow", "学号"))
        self.label_sclass.setText(_translate("MainWindow", "班号"))
        self.label_sage.setText(_translate("MainWindow", "年龄"))
        self.label_sname.setText(_translate("MainWindow", "姓名"))
        self.label_ssex.setText(_translate("MainWindow", "性别"))
        self.label_stel.setText(_translate("MainWindow", "联系方式"))
        self.label_student.setText(_translate("MainWindow", "学生信息"))
        self.comboBox_student.setItemText(0, _translate("MainWindow", "SELECT"))
        self.comboBox_student.setItemText(1, _translate("MainWindow", "INSERT"))
        self.comboBox_student.setItemText(2, _translate("MainWindow", "DELETE"))
        self.label_student_combo.setText(_translate("MainWindow", "操作"))
        self.label_tid.setText(_translate("MainWindow", "教师编号"))
        self.label_tdid.setText(_translate("MainWindow", "系号"))
        self.label_tage.setText(_translate("MainWindow", "年龄"))
        self.label_tname.setText(_translate("MainWindow", "姓名"))
        self.label_tsex.setText(_translate("MainWindow", "性别"))
        self.label_ttel.setText(_translate("MainWindow", "联系方式"))
        self.label_teacher.setText(_translate("MainWindow", "教师信息"))
        self.label_teacher_combo.setText(_translate("MainWindow", "操作"))
        self.comboBox_teacher.setItemText(0, _translate("MainWindow", "SELECT"))
        self.comboBox_teacher.setItemText(1, _translate("MainWindow", "INSERT"))
        self.comboBox_teacher.setItemText(2, _translate("MainWindow", "DELETE"))
        self.label_cid.setText(_translate("MainWindow", "课程编号"))
        self.label_hours.setText(_translate("MainWindow", "学时"))
        self.label_credit.setText(_translate("MainWindow", "学分"))
        self.label_cname.setText(_translate("MainWindow", "课程名称"))
        self.label_cdid.setText(_translate("MainWindow", "开课院系号"))
        self.label_course.setText(_translate("MainWindow", "课程信息"))
        self.label_course_combo.setText(_translate("MainWindow", "操作"))
        self.comboBox_course.setItemText(0, _translate("MainWindow", "SELECT"))
        self.comboBox_course.setItemText(1, _translate("MainWindow", "INSERT"))
        self.comboBox_course.setItemText(2, _translate("MainWindow", "DELETE"))
        self.label_clid.setText(_translate("MainWindow", "班号"))
        self.label_cltid.setText(_translate("MainWindow", "班主任编号"))
        self.label_cldid.setText(_translate("MainWindow", "系号"))
        self.label_class.setText(_translate("MainWindow", "班级信息"))
        self.label_class_combo.setText(_translate("MainWindow", "操作"))
        self.comboBox_class.setItemText(0, _translate("MainWindow", "SELECT"))
        self.comboBox_class.setItemText(1, _translate("MainWindow", "INSERT"))
        self.comboBox_class.setItemText(2, _translate("MainWindow", "DELETE"))
        self.label_dname.setText(_translate("MainWindow", "院系名称"))
        self.label_did.setText(_translate("MainWindow", "系号"))
        self.label_department.setText(_translate("MainWindow", "院系信息"))
        self.comboBox_department.setItemText(0, _translate("MainWindow", "SELECT"))
        self.comboBox_department.setItemText(1, _translate("MainWindow", "INSERT"))
        self.comboBox_department.setItemText(2, _translate("MainWindow", "DELETE"))
        self.label_department_combo.setText(_translate("MainWindow", "操作"))
        self.label_rid.setText(_translate("MainWindow", "教室号"))
        self.label_raddr.setText(_translate("MainWindow", "教室地点"))
        self.label_classroom.setText(_translate("MainWindow", "教室信息"))
        self.label_classroom_combo.setText(_translate("MainWindow", "操作"))
        self.comboBox_classroom.setItemText(0, _translate("MainWindow", "SELECT"))
        self.comboBox_classroom.setItemText(1, _translate("MainWindow", "INSERT"))
        self.comboBox_classroom.setItemText(2, _translate("MainWindow", "DELETE"))
        self.label_sc.setText(_translate("MainWindow", "学生选课"))
        self.comboBox_sc.setItemText(0, _translate("MainWindow", "SELECT"))
        self.comboBox_sc.setItemText(1, _translate("MainWindow", "INSERT"))
        self.comboBox_sc.setItemText(2, _translate("MainWindow", "DELETE"))
        self.label_sc_combo.setText(_translate("MainWindow", "操作"))
        self.label_scsid.setText(_translate("MainWindow", "学号"))
        self.label_sccid.setText(_translate("MainWindow", "课程"))
        self.label_scsid_score.setText(_translate("MainWindow", "学号"))
        self.label_sc_score.setText(_translate("MainWindow", "课程成绩录入"))
        self.label_sccid_score.setText(_translate("MainWindow", "课程号"))
        self.label_scscore_score.setText(_translate("MainWindow", "得分"))
        self.label_stu_trans_sname.setText(_translate("MainWindow", "姓名"))
        self.label_stu_trans_sid.setText(_translate("MainWindow", "学号"))
        self.label_stu_transcript.setText(_translate("MainWindow", "学生查询成绩"))
        self.label_stu_transcript_hint.setText(_translate("MainWindow", "请输入正确的学号和对应的姓名，否则无法查询！！！"))
        self.radioButton_have_score.setText(_translate("MainWindow", "是否出成绩"))
        self.label_course_trans_cid.setText(_translate("MainWindow", "课程号"))
        self.label_course_trans_cname.setText(_translate("MainWindow", "课程名"))
        self.label_course_transcript.setText(_translate("MainWindow", "课程成绩单"))
        self.label_course_transcript_hint.setText(_translate("MainWindow", "请输入正确的课程号（可以不输入课程名，若输入则一定要正确）"))
        self.comboBox_tt.setItemText(0, _translate("MainWindow", "SELECT"))
        self.comboBox_tt.setItemText(1, _translate("MainWindow", "INSERT"))
        self.comboBox_tt.setItemText(2, _translate("MainWindow", "DELETE"))
        self.label_tt.setText(_translate("MainWindow", "教学任务安排"))
        self.label_tt_combo.setText(_translate("MainWindow", "操作"))
        self.label_tttid.setText(_translate("MainWindow", "教师编号"))
        self.label_ttcid.setText(_translate("MainWindow", "课程号"))
        self.label_tt_startweek.setText(_translate("MainWindow", "开课星期"))
        self.label_tt_endweek.setText(_translate("MainWindow", "结课星期"))
        self.label_ttrdayno.setText(_translate("MainWindow", "星期"))
        self.comboBox_ttr.setItemText(0, _translate("MainWindow", "SELECT"))
        self.comboBox_ttr.setItemText(1, _translate("MainWindow", "INSERT"))
        self.comboBox_ttr.setItemText(2, _translate("MainWindow", "DELETE"))
        self.label_ttrrid.setText(_translate("MainWindow", "教室编号"))
        self.label_ttr_combo.setText(_translate("MainWindow", "操作"))
        self.label_ttr.setText(_translate("MainWindow", "教学教室安排"))
        self.label_ttr_cidtid.setText(_translate("MainWindow", "课程号-教师编号"))
        self.comboBox_ttrdayno.setItemText(1, _translate("MainWindow", "1"))
        self.comboBox_ttrdayno.setItemText(2, _translate("MainWindow", "2"))
        self.comboBox_ttrdayno.setItemText(3, _translate("MainWindow", "3"))
        self.comboBox_ttrdayno.setItemText(4, _translate("MainWindow", "4"))
        self.comboBox_ttrdayno.setItemText(5, _translate("MainWindow", "5"))
        self.comboBox_ttrdayno.setItemText(6, _translate("MainWindow", "6"))
        self.comboBox_ttrdayno.setItemText(7, _translate("MainWindow", "7"))
        self.comboBox_ttrclassno.setItemText(1, _translate("MainWindow", "1(1~2节)"))
        self.comboBox_ttrclassno.setItemText(2, _translate("MainWindow", "2(3~4节)"))
        self.comboBox_ttrclassno.setItemText(3, _translate("MainWindow", "3(5~6节)"))
        self.comboBox_ttrclassno.setItemText(4, _translate("MainWindow", "4(7~8节)"))
        self.comboBox_ttrclassno.setItemText(5, _translate("MainWindow", "5(9~10节)"))
        self.comboBox_ttrclassno.setItemText(6, _translate("MainWindow", "6(11~12节)"))
        self.label_ttrclassno.setText(_translate("MainWindow", "节次"))
        self.pushButton_confirm.setText(_translate("MainWindow", "确认"))
        self.pushButton_clear.setText(_translate("MainWindow", "清除"))
        self.menu_base.setTitle(_translate("MainWindow", "基础信息"))
        self.menu_others.setTitle(_translate("MainWindow", "其他"))
        self.action_student.setText(_translate("MainWindow", "学生"))
        self.action_student.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.action_teacher.setText(_translate("MainWindow", "教师"))
        self.action_teacher.setShortcut(_translate("MainWindow", "Ctrl+Shift+T"))
        self.action_course.setText(_translate("MainWindow", "课程"))
        self.action_course.setShortcut(_translate("MainWindow", "Ctrl+Shift+C"))
        self.action_class.setText(_translate("MainWindow", "班级"))
        self.action_class.setShortcut(_translate("MainWindow", "Ctrl+Shift+X"))
        self.action_department.setText(_translate("MainWindow", "院系"))
        self.action_department.setShortcut(_translate("MainWindow", "Ctrl+Shift+D"))
        self.action_classroom.setText(_translate("MainWindow", "教室"))
        self.action_classroom.setShortcut(_translate("MainWindow", "Ctrl+Shift+R"))
        self.action_sc.setText(_translate("MainWindow", "学生选课"))
        self.action_sc_score.setText(_translate("MainWindow", "学生成绩录入"))
        self.action_stu_transcript.setText(_translate("MainWindow", "学生成绩单"))
        self.action_course_transcript.setText(_translate("MainWindow", "课程成绩单"))
        self.action_tt.setText(_translate("MainWindow", "教学任务安排"))
        self.action_ttr.setText(_translate("MainWindow", "教学-教室安排"))

        self.action_student.triggered.connect(self.page_student_show)
        self.action_teacher.triggered.connect(self.page_teacher_show)
        self.action_course.triggered.connect(self.page_course_show)
        self.action_class.triggered.connect(self.page_class_show)
        self.action_department.triggered.connect(self.page_department_show)
        self.action_classroom.triggered.connect(self.page_classroom_show)
        self.action_sc.triggered.connect(self.page_sc_show)
        self.action_sc_score.triggered.connect(self.page_sc_score_show)
        self.action_stu_transcript.triggered.connect(self.page_stu_transcript_show)
        self.action_course_transcript.triggered.connect(self.page_course_transcript_show)
        self.action_tt.triggered.connect(self.page_tt_show)
        self.action_ttr.triggered.connect(self.page_ttr_show)
        # 学生成绩录入
        # 课程成绩单
        # 学生成绩单

    def page_student_show(self):
        self.stackedWidget.setCurrentWidget(self.page_student)

    def page_teacher_show(self):
        self.stackedWidget.setCurrentWidget(self.page_teacher)

    def page_course_show(self):
        self.stackedWidget.setCurrentWidget(self.page_course)

    def page_class_show(self):
        self.stackedWidget.setCurrentWidget(self.page_class)

    def page_department_show(self):
        self.stackedWidget.setCurrentWidget(self.page_department)

    def page_classroom_show(self):
        self.stackedWidget.setCurrentWidget(self.page_classroom)

    def page_sc_show(self):
        self.stackedWidget.setCurrentWidget(self.page_sc)
        self.comboBox_sccid.clear()
        self.comboBox_sccid.addItem("")
        try:
            self.cursor.execute("select c_id from course;")
            result = self.cursor.fetchall()
            for col, key in enumerate(result):
                self.comboBox_sccid.addItem(str(key[0]))
        except pymysql.Error as e:
            QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'QUERY Wrong ' + str(e.args[0]), str(e.args[1])).exec()

    def page_sc_score_show(self):
        self.stackedWidget.setCurrentWidget(self.page_sc_score)
        self.comboBox_sccid_score.clear()
        try:
            self.cursor.execute("select c_id from course;")
            result = self.cursor.fetchall()
            for col, key in enumerate(result):
                self.comboBox_sccid_score.addItem(str(key[0]))
        except pymysql.Error as e:
            QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'QUERY Wrong ' + str(e.args[0]), str(e.args[1])).exec()

    def page_stu_transcript_show(self):
        self.stackedWidget.setCurrentWidget(self.page_stu_transcript)

    def page_course_transcript_show(self):
        self.stackedWidget.setCurrentWidget(self.page_course_transcript)

    def page_tt_show(self):
        self.stackedWidget.setCurrentWidget(self.page_tt)
        self.comboBox_ttcid.clear()
        self.comboBox_ttcid.addItem("")
        try:
            self.cursor.execute("select c_id from course;")
            result = self.cursor.fetchall()
            for col, key in enumerate(result):
                self.comboBox_ttcid.addItem(str(key[0]))
        except pymysql.Error as e:
            QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'QUERY Wrong ' + str(e.args[0]), str(e.args[1])).exec()
        self.comboBox_tttid.clear()
        self.comboBox_tttid.addItem("")
        try:
            self.cursor.execute("select t_id from teacher;")
            result = self.cursor.fetchall()
            for col, key in enumerate(result):
                self.comboBox_tttid.addItem(str(key[0]))
        except pymysql.Error as e:
            QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'QUERY Wrong ' + str(e.args[0]), str(e.args[1])).exec()

    def page_ttr_show(self):
        self.stackedWidget.setCurrentWidget(self.page_ttr)
        self.comboBox_ttr_cidtid.clear()
        self.comboBox_ttr_cidtid.addItem("")
        try:
            self.cursor.execute("select c_id, t_id from ttr;")
            result = self.cursor.fetchall()
            for col, key in enumerate(result):
                self.comboBox_ttr_cidtid.addItem(str(key[0]) + "-" + str(key[1]))
        except pymysql.Error as e:
            QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'QUERY Wrong ' + str(e.args[0]), str(e.args[1])).exec()
        self.comboBox_ttrrid.clear()
        self.comboBox_ttrrid.addItem("")
        try:
            self.cursor.execute("select r_id, r_addr from classroom;")
            result = self.cursor.fetchall()
            for col, key in enumerate(result):
                self.comboBox_ttrrid.addItem(str(key[0]) + "-" + str(key[1]))
        except pymysql.Error as e:
            QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'QUERY Wrong ' + str(e.args[0]), str(e.args[1])).exec()

    def student_where(self):
        str_where = ""
        have_other_text = False
        # id
        id_text = self.lineEdit_sid.text().strip()
        if id_text != "":
            str_where += "s_id like '" + id_text + "'"
            have_other_text = True
        # name
        name_text = self.lineEdit_sname.text().strip()
        if name_text != "":
            if have_other_text:
                str_where += " and "
            str_where += "s_name like '" + name_text + "'"
            have_other_text = True
        # sex
        sex_text = self.lineEdit_ssex.text().strip()
        if sex_text != "":
            if have_other_text:
                str_where += " and "
            str_where += "s_sex like '" + sex_text + "'"
            have_other_text = True
        # class
        class_text = self.lineEdit_sclass.text().strip()
        if class_text != "":
            if have_other_text:
                str_where += " and "
            str_where += "s_class like '" + class_text + "'"
            have_other_text = True
        # tel
        tel_text = self.lineEdit_stel.text().strip()
        if tel_text != "":
            if have_other_text:
                str_where += " and "
            str_where += "s_tel like '" + tel_text + "'"
            have_other_text = True
        # age
        age_text = self.lineEdit_sage.text().strip()
        if age_text != "":
            try:
                int(age_text)
                if have_other_text:
                    str_where += " and "
                str_where += "s_age = " + age_text
                have_other_text = True
            except:
                QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'Warning',
                                      'Error age! Please input an INT number!').exec()
        if have_other_text:
            str_where = " where " + str_where
        return str_where

    def teacher_where(self):
        str_where = ""
        have_other_text = False
        # id
        id_text = self.lineEdit_tid.text().strip()
        if id_text != "":
            str_where += "t_id like '" + id_text + "'"
            have_other_text = True
        # name
        name_text = self.lineEdit_tname.text().strip()
        if name_text != "":
            if have_other_text:
                str_where += " and "
            str_where += "t_name like '" + name_text + "'"
            have_other_text = True
        # sex
        sex_text = self.lineEdit_tsex.text().strip()
        if sex_text != "":
            if have_other_text:
                str_where += " and "
            str_where += "t_sex like '" + sex_text + "'"
            have_other_text = True
        # tel
        tel_text = self.lineEdit_ttel.text().strip()
        if tel_text != "":
            if have_other_text:
                str_where += " and "
            str_where += "t_tel like '" + tel_text + "'"
            have_other_text = True
        # t_did
        tdid_text = self.lineEdit_tdid.text().strip()
        if tdid_text != "":
            if have_other_text:
                str_where += " and "
            str_where += "d_id like '" + tdid_text + "'"
            have_other_text = True
        # age
        age_text = self.lineEdit_tage.text().strip()
        if age_text != "":
            try:
                agest = int(age_text)
                if have_other_text:
                    str_where += " and "
                str_where += "t_age = " + age_text
                have_other_text = True
            except:
                QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'Warning',
                                      'Error age! Please input an INT number!').exec()

        if have_other_text:
            str_where = " where " + str_where
        return str_where

    def course_where(self):
        str_where = ""
        have_other_text = False
        # id
        id_text = self.lineEdit_cid.text().strip()
        if id_text != "":
            str_where += "c_id like '" + id_text + "'"
            have_other_text = True
        # name
        name_text = self.lineEdit_cname.text().strip()
        if name_text != "":
            if have_other_text:
                str_where += " and "
            str_where += "c_name like '" + name_text + "'"
            have_other_text = True
        # credit
        credit_text = self.lineEdit_credit.text().strip()
        if credit_text != "":
            try:
                float(credit_text)
                if have_other_text:
                    str_where += " and "
                str_where += "credit = " + credit_text
                have_other_text = True
            except:
                QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'Warning',
                                      'Error credit! Please input a FLOAT number!').exec()
        # hours
        hours_text = self.lineEdit_hours.text().strip()
        if hours_text != "":
            try:
                int(hours_text)
                if have_other_text:
                    str_where += " and "
                str_where += "hours = " + hours_text
                have_other_text = True
            except:
                QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'Warning',
                                      'Error hourse! Please input an INT number!').exec()
        # c_did
        cdid_text = self.lineEdit_cdid.text().strip()
        if cdid_text != "":
            if have_other_text:
                str_where += " and "
            str_where += "d_id like '" + cdid_text + "'"
            have_other_text = True

        if have_other_text:
            str_where = " where " + str_where
        return str_where

    def class_where(self):
        str_where = ""
        have_other_text = False
        # id
        clid_text = self.lineEdit_clid.text().strip()
        if clid_text != "":
            str_where += "class.cl_id like '" + clid_text + "'"
            have_other_text = True
        # cl_did
        cldid_text = self.lineEdit_cldid.text().strip()
        if cldid_text != "":
            if have_other_text:
                str_where += " and "
            str_where += "class.d_id like '" + cldid_text + "'"
            have_other_text = True
        # cl_tid
        cltid_text = self.lineEdit_cltid.text().strip()
        if cltid_text != "":
            if have_other_text:
                str_where += " and "
            str_where += "class.t_id like '" + cltid_text + "'"
            have_other_text = True

        if have_other_text:
            str_where = " where " + str_where
        return str_where

    def department_where(self):
        str_where = ""
        have_other_text = False
        # id
        did_text = self.lineEdit_did.text().strip()
        if did_text != "":
            str_where += "d_id like '" + did_text + "'"
            have_other_text = True
        # name
        name_text = self.lineEdit_dname.text().strip()
        if name_text != "":
            if have_other_text:
                str_where += " and "
            str_where += "d_name like '" + name_text + "'"
            have_other_text = True

        if have_other_text:
            str_where = " where " + str_where
        return str_where

    def classroom_where(self):
        str_where = ""
        have_other_text = False
        # id
        rid_text = self.lineEdit_rid.text().strip()
        if rid_text != "":
            str_where += "r_id like '" + rid_text + "'"
            have_other_text = True
        # addr
        addr_text = self.lineEdit_raddr.text().strip()
        if addr_text != "":
            if have_other_text:
                str_where += " and "
            str_where += "r_addr like '" + addr_text + "'"
            have_other_text = True

        if have_other_text:
            str_where = " where " + str_where
        return str_where

    def sc_where(self):
        str_where = ""
        have_other_text = False
        # s_id
        scsid_text = self.lineEdit_scsid.text().strip()
        if scsid_text != "":
            str_where += "sc.s_id like '" + scsid_text + "'"
            have_other_text = True
        # c_id
        sccid = self.comboBox_sccid.currentText()
        if sccid != "":
            if have_other_text:
                str_where += " and "
            str_where += "sc.c_id like '" + sccid + "'"
            have_other_text = True

        if have_other_text:
            str_where = " where " + str_where
        return str_where

    def student_transcript_where(self):
        str_where = " where "
        # s_id
        stsid_text = self.lineEdit_stu_trans_sid.text().strip()
        str_where += "sc.s_id = '" + stsid_text + "'"
        # s_name
        stsname_text = self.lineEdit_stu_trans_sname.text().strip()
        str_where += " and student.s_name = '" + stsname_text + "'" + " and sc.score is "
        str_where += "not null;" if self.radioButton_have_score.isChecked() else "null;"
        return str_where

    def course_transcript_where(self):
        str_where = " where "
        # c_id
        ctcid_text = self.lineEdit_course_trans_cid.text().strip()
        str_where += "sc.c_id = '" + ctcid_text + "'"
        # c_name
        ctcname_text = self.lineEdit_course_trans_cname.text().strip()
        if ctcname_text != "":
            str_where += " and course.c_name = '" + ctcname_text + "'"
        str_where += ";"
        return str_where

    def tt_where(self):
        str_where = ""
        have_other_text = False
        # c_id
        ttcid_text = self.comboBox_ttcid.currentText()
        if ttcid_text != "":
            str_where += "tt.c_id = '" + ttcid_text + "'"
            have_other_text = True
        # t_id
        tttid_text = self.comboBox_tttid.currentText()
        if tttid_text != "":
            if have_other_text:
                str_where += " and "
            str_where += "tt.t_id = '" + tttid_text + "'"
            have_other_text = True
        # start_week, end_week
        tt_start_week = self.lineEdit_startweek.text().strip()
        if tt_start_week != "":
            try:
                start_week = int(tt_start_week)
                if start_week <= end_week:
                    if have_other_text:
                        str_where += " and "
                    str_where += "tt.start_week = " + tt_start_week
            except:
                QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'INPUT Wrong ', "请输入正确的开始星期！").exec()
        tt_end_week = self.lineEdit_endweek.text().strip()
        if tt_end_week != "":
            try:
                end_week = int(tt_end_week)
                if start_week <= end_week:
                    if have_other_text:
                        str_where += " and "
                    str_where += "tt.end_week = " + tt_end_week
            except:
                QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'INPUT Wrong ', "请输入正确的终止星期！").exec()

        if have_other_text:
            str_where = " where " + str_where
        return str_where

    def ttr_where(self):
        str_where = ""
        have_other_text = False
        # t_id, c_id pair
        ttr_cidtid_text = self.comboBox_ttr_cidtid.currentText()
        if ttr_cidtid_text != "":
            cidtid = ttr_cidtid_text.split("-")
            cid_text = cidtid[0]
            tid_text = cidtid[1]
            str_where += "ttr.c_id = '" + cid_text + "' and ttr.t_id = '" + tid_text + "'"
            have_other_text = True
        # r_id
        ttr_rid_text = self.comboBox_ttrrid.currentText()
        if ttr_rid_text != "":
            if have_other_text:
                str_where += " and "
            r_id_text = ttr_rid_text.split("-")
            str_where += "ttr.r_id = '" + r_id_text[0] + "'"
            have_other_text = True
        # dayno
        ttr_dayno_text = self.comboBox_ttrdayno.currentIndex()
        if ttr_dayno_text != 0:
            if have_other_text:
                str_where += " and "
            str_where += "ttr.dayno = " + str(ttr_dayno_text) + ""
            have_other_text = True
        # classno
        ttr_classno_text = self.comboBox_ttrclassno.currentIndex()
        if ttr_classno_text != 0:
            if have_other_text:
                str_where += " and "
            str_where += "ttr.classno = " + str(ttr_classno_text) + ""
            have_other_text = True

        if have_other_text:
            str_where = " where " + str_where
        return str_where

    def query(self, sql, labels):
        print(sql)
        try:
            self.cursor.execute(sql)
            result = self.cursor.fetchall()
            # tableView
            self.model = QtGui.QStandardItemModel(0, len(labels))
            self.model.setHorizontalHeaderLabels(labels)
            self.tableView.setModel(self.model)
            # Create Table from tableData keys, values
            for col, key in enumerate(result):
                for row, item in enumerate(key):
                    self.model.setItem(col, row, QtGui.QStandardItem(str(key[row])))
            # stretch columns to fill empty space
            for col in range(len(labels)):
                self.tableView.horizontalHeader().setSectionResizeMode(col, QtWidgets.QHeaderView.Stretch)
        except pymysql.Error as e:
            QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'QUERY Wrong ' + str(e.args[0]), str(e.args[1])).exec()

    def delete(self, sql):
        # make sure wanna delete
        delete_confirm = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Question, "Question",
                                               "Are you sure you wanna delete?")
        delete_confirm.addButton(QtWidgets.QMessageBox.Yes)
        delete_confirm.addButton(QtWidgets.QMessageBox.No)
        delete_confirm.setDefaultButton(QtWidgets.QMessageBox.No)
        reply = delete_confirm.exec()
        if reply == QtWidgets.QMessageBox.Yes:
            try:
                self.cursor.execute(sql)
                self.db.commit()
                QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'Success',
                                      'Delete success! The left data as below.').exec()
            except pymysql.Error as e:
                QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'DELETE Wrong ' + str(e.args[0]),
                                      str(e.args[1])).exec()

    def insert_student_sql(self):
        insert_student_sql = "insert into student (s_id, s_name, s_sex, s_age, s_clid, s_tel) values ("
        sid_text = self.lineEdit_sid.text().strip()
        sname_text = self.lineEdit_sname.text().strip()
        ssex_text = self.lineEdit_ssex.text().strip()
        sclass_text = self.lineEdit_sclass.text().strip()
        stel_text = self.lineEdit_stel.text().strip()
        sage_text = ""
        age_text = self.lineEdit_sage.text().strip()
        if age_text != "":
            try:
                sage_text = int(age_text)
            except:
                QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'Warning',
                                      'Error age! Please input an INT number!').exec()
        insert_value = "'" + sid_text + "', '" + sname_text + "', '" + ssex_text + "', '" + str(
            sage_text) + "', '" + sclass_text + "', '" + stel_text + "'"
        insert_value.replace("''", "null")
        insert_student_sql += insert_value + ");"
        return insert_student_sql

    def insert_teacher_sql(self):
        insert_teacher_sql = "insert into teacher (t_id, d_id, t_name, t_sex, t_age, t_tel) values ("
        tid_text = self.lineEdit_tid.text().strip()
        tname_text = self.lineEdit_tname.text().strip()
        tsex_text = self.lineEdit_tsex.text().strip()
        ttel_text = self.lineEdit_ttel.text().strip()
        tdid_text = self.lineEdit_tdid.text().strip()
        tage_text = ""
        age_text = self.lineEdit_tage.text().strip()
        if age_text != "":
            try:
                tage_text = int(age_text)
            except:
                QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'Warning',
                                      'Error age! Please input an INT number!').exec()
        insert_value = "'" + tid_text + "', '" + tdid_text + "', '" + tname_text + "', '" + tsex_text + "', '" + str(
            tage_text) + "', '" + ttel_text + "'"
        insert_value.replace("''", "null")
        insert_teacher_sql += insert_value + ");"
        return insert_teacher_sql

    def insert_course_sql(self):
        insert_course_sql = "insert into course (c_id, c_name, d_id, credit, hours) values ("
        cid_text = self.lineEdit_cid.text().strip()
        cname_text = self.lineEdit_cname.text().strip()
        cdid_text = self.lineEdit_cdid.text().strip()
        credit_text = self.lineEdit_credit.text().strip()
        ccredit_text = ""
        if credit_text != "":
            try:
                ccredit_text = float(credit_text)
            except:
                QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'Warning',
                                      'Error age! Please input an FLOAT number!').exec()
        hours_text = self.lineEdit_hours.text().strip()
        chours_text = ""
        if hours_text != "":
            try:
                chours_text = int(hours_text)
            except:
                QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'Warning',
                                      'Error age! Please input an INT number!').exec()
        insert_value = "'" + cid_text + "', '" + cname_text + "', '" + cdid_text + "', '" + str(
            ccredit_text) + "', '" + str(chours_text) + "'"
        insert_value.replace("''", "null")
        insert_course_sql += insert_value + ");"
        return insert_course_sql

    def insert_class_sql(self):
        insert_class_sql = "insert into class (cl_id, t_id, d_id) values ("
        clid_text = self.lineEdit_clid.text().strip()
        cltid_text = self.lineEdit_cltid.text().strip()
        cldid_text = self.lineEdit_cldid.text().strip()
        insert_value = "'" + clid_text + "', '" + cltid_text + "', '" + cldid_text + "'"
        insert_value.replace("''", "null")
        insert_class_sql += insert_value + ");"
        return insert_class_sql

    def insert_department_sql(self):
        insert_department_sql = "insert into department (d_id, d_name) values ("
        did_text = self.lineEdit_did.text().strip()
        dname_text = self.lineEdit_dname.text().strip()
        insert_value = "'" + did_text + "', '" + dname_text + "'"
        insert_value.replace("''", "null")
        insert_department_sql += insert_value + ");"
        return insert_department_sql

    def insert_classroom_sql(self):
        insert_classroom_sql = "insert into classroom (r_id, r_addr) values ("
        rid_text = self.lineEdit_rid.text().strip()
        raddr_text = self.lineEdit_raddr.text().strip()
        insert_value = "'" + rid_text + "', '" + raddr_text + "'"
        insert_value.replace("''", "null")
        insert_classroom_sql += insert_value + ");"
        return insert_classroom_sql

    def insert_sc_sql(self):
        insert_sc_sql = "insert into sc (s_id, c_id, score, date) values ("
        sid_text = self.lineEdit_scsid.text().strip()
        cid_text = self.comboBox_sccid.currentText().strip()
        insert_value = "'" + sid_text + "', '" + cid_text + "', null, null"
        insert_value.replace("''", "null")
        insert_sc_sql += insert_value + ");"
        return insert_sc_sql

    def insert_tt_sql(self):
        insert_tt_sql = "insert into tt (t_id, c_id, start_week, end_week) values ("
        tid_text = self.comboBox_tttid.currentText()
        cid_text = self.comboBox_ttcid.currentText()
        start_week_text = self.lineEdit_startweek.text().strip()
        end_week_text = self.lineEdit_endweek.text().strip()
        insert_value = "'" + tid_text + "', '" + cid_text + "', '" + start_week_text + "', '" + end_week_text + "'"
        insert_value.replace("''", "null")
        insert_tt_sql += insert_value + ");"
        return insert_tt_sql

    def insert_ttr_sql(self):
        insert_ttr_sql = "insert into ttr (c_id, t_id, r_id, dayno, classno) values ("
        cidtid_text = self.comboBox_ttr_cidtid.currentText()
        cidtid = cidtid_text.split("-")
        cid_text, tid_text = cidtid[0], cidtid[1]
        rid_raddr_text = self.comboBox_ttrrid.currentText().split("-")
        rid_text = rid_raddr_text[0]
        dayno_text = self.comboBox_ttrdayno.currentIndex()
        classno_text = self.comboBox_ttrclassno.currentIndex()
        insert_value = "'" + cid_text + "', '" + tid_text + "', '" + rid_text + "', " + \
                       str(dayno_text).replace("0", "null") + ", " + str(classno_text).replace("0", "null")
        insert_value.replace("''", "null")
        insert_ttr_sql += insert_value + ");"
        return insert_ttr_sql

    def insert(self, sql):
        try:
            self.cursor.execute(sql)
            self.db.commit()
            QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'Success', 'Insert Success!').exec()
        except pymysql.Error as e:
            QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'INSERT Wrong ' + str(e.args[0]), str(e.args[1])).exec()

    def update_sc(self):
        today = date.today()
        # dd/mm/YY
        update_date = str(today.strftime("%Y-%m-%d"))
        update_sc_sql = "update sc set date = '" + update_date + "',score = "
        score_text = self.lineEdit_scscore_score.text().strip()
        if score_text != "":
            try:
                score_text = float(score_text)
            except:
                QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'Warning',
                                      'Error age! Please input an FLOAT number!').exec()
        update_sc_sql += str(score_text) + " where s_id = '" + \
                         self.lineEdit_scsid_score.text().strip() + "' and c_id = '" + \
                         self.comboBox_sccid_score.currentText().strip() + "';"
        try:
            self.cursor.execute(update_sc_sql)
            self.db.commit()
            QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'Success', 'Update Success!').exec()
        except pymysql.Error as e:
            QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'UPDATE Wrong ' + str(e.args[0]), str(e.args[1])).exec()

    def student_statistics(self):
        if self.radioButton_have_score.isChecked():
            stud_stat_sql = "select total_credits, avg_score from studstat where s_id = '" + \
                            self.lineEdit_stu_trans_sid.text().strip() + "' and s_name = '" + \
                            self.lineEdit_stu_trans_sname.text().strip() + "';"
            try:
                self.cursor.execute(stud_stat_sql)
                result = self.cursor.fetchone()
                # 弹窗显示统计结果
                if result is not None:
                    total_credits = result[0]
                    avg_score = result[1]
                    QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, '学生统计结果',
                                          "该同学已出成绩的总学分有：" + str(total_credits) +
                                          "分，平均学分绩有：" + str(avg_score)).exec()
                else:
                    QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, '学生统计结果',
                                          "没有该同学/该同学没有一门课出成绩，无法统计").exec()
            except pymysql.Error as e:
                QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'QUERY Wrong ' + str(e.args[0]),
                                      str(e.args[1])).exec()
        else:
            stud_stat_sql = "select credits_no_score, courseNum from studnoscorecourse where s_id = '" + \
                            self.lineEdit_stu_trans_sid.text().strip() + "' and s_name = '" + \
                            self.lineEdit_stu_trans_sname.text().strip() + "';"
            try:
                self.cursor.execute(stud_stat_sql)
                result = self.cursor.fetchone()
                # 弹窗显示统计结果
                if result is not None:
                    total_credits = result[0]
                    courseNum = result[1]
                    QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, '学生未出成绩课程统计', \
                                          "该同学未出成绩/未结课的课程总学分有：" + str(total_credits) + \
                                          "分，总共课程数：" + str(courseNum) + "门").exec()
                else:
                    QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, '学生统计结果', \
                                          "没有该同学/该同学没有一门课未出成绩，无法统计").exec()
            except pymysql.Error as e:
                QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'QUERY Wrong ' + str(e.args[0]),
                                      str(e.args[1])).exec()

    def course_statistics(self):
        course_stat_sql = "select max_score, min_score, avg_score from coursestat where c_id = '" + \
                          self.lineEdit_course_trans_cid.text().strip() + "';"
        try:
            self.cursor.execute(course_stat_sql)
            result = self.cursor.fetchone()
            # 弹窗显示统计结果
            if result is not None:
                max_score = result[0]
                min_score = result[1]
                avg_score = result[2]
                QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, '课程统计结果',
                                      "该课程最高分：" + str(max_score) + "分，最低分：" + str(min_score) +
                                      "平均分：" + str(avg_score) + "分.").exec()
            else:
                QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, '课程统计结果',
                                      "没有该课程/没人选该课程/该课程成绩均未出，无法统计").exec()
        except pymysql.Error as e:
            QtWidgets.QMessageBox(QtWidgets.QMessageBox.NoIcon, 'QUERY Wrong ' + str(e.args[0]), str(e.args[1])).exec()

    def confirm(self):
        # stuent
        if self.stackedWidget.currentWidget() == self.page_student:
            student_header = ['学号', '班级', '姓名', '性别', '年龄', '电话']
            if self.comboBox_student.currentIndex() == 0:
                student_query_sql = "select * from student" + self.student_where() + ";"
                self.query(student_query_sql, student_header)
            elif self.comboBox_student.currentIndex() == 1:
                self.insert(self.insert_student_sql())
                self.query("select * from student;", student_header)
            elif self.comboBox_student.currentIndex() == 2:
                student_delete_sql = "delete from student" + self.student_where() + ";"
                self.delete(student_delete_sql)
                self.query("select * from student;", student_header)
        # teacher
        elif self.stackedWidget.currentWidget() == self.page_teacher:
            teacher_header = ['教师编号', '系号', '姓名', '性别', '年龄', '电话']
            if self.comboBox_teacher.currentIndex() == 0:
                teacher_query_sql = "select * from teacher" + self.teacher_where() + ";"
                self.query(teacher_query_sql, teacher_header)
            elif self.comboBox_teacher.currentIndex() == 1:
                self.insert(self.insert_teacher_sql())
                self.query("select * from teacher;", teacher_header)
            elif self.comboBox_teacher.currentIndex() == 2:
                teacher_delete_sql = "delete from teacher" + self.teacher_where() + ";"
                self.delete(teacher_delete_sql)
                self.query("select * from teacher;", teacher_header)
        # course
        elif self.stackedWidget.currentWidget() == self.page_course:
            course_header = ['课程编号', '课程名', '开课系号', '学分', '学时']
            if self.comboBox_course.currentIndex() == 0:
                course_query_sql = "select * from course" + self.course_where() + ";"
                self.query(course_query_sql, course_header)
            elif self.comboBox_course.currentIndex() == 1:
                self.insert(self.insert_course_sql())
                self.query("select * from course;", course_header)
            elif self.comboBox_course.currentIndex() == 2:
                course_delete_sql = "delete from course" + self.course_where() + ";"
                self.delete(course_delete_sql)
                self.query("select * from course;", course_header)
        # class
        elif self.stackedWidget.currentWidget() == self.page_class:
            class_header = ['班号', '班主任编号', '班主任名字', '班级院系', '班级学生数']
            class_query_A = "select A.cl_id, A.t_id, A.t_name, A.d_name, ifnull(stuno, 0) from (" + \
                            "select class.cl_id, class.t_id, teacher.t_name, department.d_name " + \
                            "from class inner join teacher inner join department " + \
                            "on teacher.t_id = class.t_id and department.d_id = class.d_id "
            class_query_B = ") as A left join (select cl_id, count(*) as stuno from student group by cl_id) as B " + \
                            "on B.cl_id = A.cl_id;"
            if self.comboBox_class.currentIndex() == 0:
                # class_query_sql = "select * from class" + self.class_where() + ";"
                self.query(class_query_A + self.class_where() + class_query_B, class_header)
            elif self.comboBox_class.currentIndex() == 1:
                self.insert(self.insert_class_sql())
                self.query(class_query_A + class_query_B, class_header)
            elif self.comboBox_class.currentIndex() == 2:
                class_delete_sql = "delete from class" + self.class_where() + ";"
                self.delete(class_delete_sql)
                self.query(class_query_A + class_query_B, class_header)
        # department
        elif self.stackedWidget.currentWidget() == self.page_department:
            department_header = ['系号', '院系名称']
            if self.comboBox_department.currentIndex() == 0:
                department_query_sql = "select * from department" + self.department_where() + ";"
                self.query(department_query_sql, department_header)
            elif self.comboBox_department.currentIndex() == 1:
                self.insert(self.insert_department_sql())
                self.query("select * from department;", department_header)
            elif self.comboBox_department.currentIndex() == 2:
                department_delete_sql = "delete from department" + self.department_where() + ";"
                self.delete(department_delete_sql)
                self.query("select * from department;", department_header)
        # classroom
        elif self.stackedWidget.currentWidget() == self.page_classroom:
            classroom_header = ['教室编号', '教室具体位置']
            if self.comboBox_classroom.currentIndex() == 0:
                classroom_query_sql = "select * from classroom" + self.classroom_where() + ";"
                self.query(classroom_query_sql, classroom_header)
            elif self.comboBox_classroom.currentIndex() == 1:
                self.insert(self.insert_classroom_sql())
                self.query("select * from classroom;", classroom_header)
            elif self.comboBox_classroom.currentIndex() == 2:
                classroom_delete_sql = "delete from classroom" + self.classroom_where() + ";"
                self.delete(classroom_delete_sql)
                self.query("select * from classroom;", classroom_header)
        # sc
        elif self.stackedWidget.currentWidget() == self.page_sc:
            sc_header = ['课程编号', '课程名', '学生学号', '学生姓名', '成绩']
            sc_query_sql_A = "select sc.c_id, course.c_name, sc.s_id, student.s_name, sc.score " + \
                             "from sc inner join student inner join course " + \
                             "on student.s_id = sc.s_id and course.c_id = sc.c_id "
            sc_where = self.sc_where() + ";" if self.sc_where() else ";"
            if self.comboBox_sc.currentIndex() == 0:
                self.query(sc_query_sql_A + sc_where, sc_header)
            elif self.comboBox_sc.currentIndex() == 1:
                self.insert(self.insert_sc_sql())
                self.query(sc_query_sql_A + ";", sc_header)
            elif self.comboBox_sc.currentIndex() == 2:
                sc_delete_sql = "delete from sc" + self.sc_where() + ";"
                self.delete(sc_delete_sql)
                self.query(sc_query_sql_A + ";", sc_header)
        # sc_score
        elif self.stackedWidget.currentWidget() == self.page_sc_score:
            sc_score_query_sql = "select sc.c_id, course.c_name, sc.s_id, student.s_name, sc.score " + \
                                 "from sc inner join student inner join course " + \
                                 "on student.s_id = sc.s_id and course.c_id = sc.c_id;"
            self.update_sc()
            self.query(sc_score_query_sql, sc_header)
        # student_transcript
        elif self.stackedWidget.currentWidget() == self.page_stu_transcript:
            student_transcript_header = ['学号', '姓名', '课程编号', '课程名', '成绩', '课程学分']
            student_transcript_query_sql = \
                "select student.s_id, student.s_name, sc.c_id, c_name, score, credit " + \
                "from sc inner join student inner join course " + \
                "on sc.s_id = student.s_id and sc.c_id = course.c_id " + \
                self.student_transcript_where()
            self.query(student_transcript_query_sql, student_transcript_header)
            # student_statistics
            # student_statistics
            self.student_statistics()
        # course_transcript
        elif self.stackedWidget.currentWidget() == self.page_course_transcript:
            course_transcript_header = ['课程编号', '课程名', '学号', '姓名', '成绩']
            course_transcript_query_sql = \
                "select sc.c_id, c_name, student.s_id, student.s_name, score " + \
                "from sc inner join student inner join course " + \
                "on sc.s_id = student.s_id and sc.c_id = course.c_id " + \
                self.course_transcript_where()
            self.query(course_transcript_query_sql, course_transcript_header)
            # course_statistics
            self.course_statistics()
        # tt
        elif self.stackedWidget.currentWidget() == self.page_tt:
            tt_header = ['教师编号', '教师姓名', '课程编号', '课程名', '开始星期', '结束星期']
            tt_query_sql_A = "select A.t_id, teacher.t_name, A.c_id, course.c_name, A.start_week, A.end_week " + \
                             "from (select t_id, c_id, start_week, end_week from tt "
            tt_query_sql_B = ") as A inner join teacher inner join course " + \
                             "on A.t_id = teacher.t_id and A.c_id = course.c_id;"
            tt_where = self.tt_where()
            if self.comboBox_tt.currentIndex() == 0:
                self.query(tt_query_sql_A + tt_where + tt_query_sql_B, tt_header)
            elif self.comboBox_tt.currentIndex() == 1:
                self.insert(self.insert_tt_sql())
                self.query(tt_query_sql_A + tt_query_sql_B, tt_header)
            elif self.comboBox_tt.currentIndex() == 2:
                tt_delete_sql = "delete from tt" + self.tt_where() + ";"
                self.delete(tt_delete_sql)
                self.query(tt_query_sql_A + tt_query_sql_B, tt_header)
        # ttr
        elif self.stackedWidget.currentWidget() == self.page_ttr:
            ttr_header = ['教师编号', '教师姓名', '课程编号', '课程名', '星期', '节次', '教室']
            ttr_query_sql_A = "select A.t_id, teacher.t_name, A.c_id, course.c_name, A.dayno, A.classno, classroom.r_addr " + \
                              "from (select t_id, c_id, r_id, dayno, classno from ttr "
            ttr_query_sql_B = ") as A inner join teacher inner join course inner join classroom " + \
                              "on A.t_id = teacher.t_id and A.c_id = course.c_id and A.r_id = classroom.r_id;"
            ttr_where = self.ttr_where()
            if self.comboBox_ttr.currentIndex() == 0:
                self.query(ttr_query_sql_A + ttr_where + ttr_query_sql_B, ttr_header)
            elif self.comboBox_ttr.currentIndex() == 1:
                self.insert(self.insert_ttr_sql())
                self.query(ttr_query_sql_A + ttr_query_sql_B, ttr_header)
            elif self.comboBox_ttr.currentIndex() == 2:
                ttr_delete_sql = "delete from ttr" + self.ttr_where() + ";"
                self.delete(ttr_delete_sql)
                self.query(ttr_query_sql_A + ttr_query_sql_B, ttr_header)

    def clear(self):
        self.tableView.setModel(None)
        if self.stackedWidget.currentWidget() == self.page_student:
            self.lineEdit_sid.clear()
            self.lineEdit_sage.clear()
            self.lineEdit_sname.clear()
            self.lineEdit_ssex.clear()
            self.lineEdit_stel.clear()
            self.lineEdit_sclass.clear()
        elif self.stackedWidget.currentWidget() == self.page_teacher:
            self.lineEdit_tid.clear()
            self.lineEdit_tage.clear()
            self.lineEdit_tname.clear()
            self.lineEdit_ttel.clear()
            self.lineEdit_tsex.clear()
            self.lineEdit_tdid.clear()
        elif self.stackedWidget.currentWidget() == self.page_course:
            self.lineEdit_cid.clear()
            self.lineEdit_cname.clear()
            self.lineEdit_cdid.clear()
            self.lineEdit_hours.clear()
            self.lineEdit_credit.clear()
        elif self.stackedWidget.currentWidget() == self.page_class:
            self.lineEdit_clid.clear()
            self.lineEdit_cltid.clear()
            self.lineEdit_cldid.clear()
        elif self.stackedWidget.currentWidget() == self.page_department:
            self.lineEdit_did.clear()
            self.lineEdit_dname.clear()
        elif self.stackedWidget.currentWidget() == self.page_classroom:
            self.lineEdit_rid.clear()
            self.lineEdit_raddr.clear()
        elif self.stackedWidget.currentWidget() == self.page_sc:
            self.lineEdit_scsid.clear()
            self.comboBox_sccid.setCurrentIndex(0)
        elif self.stackedWidget.currentWidget() == self.page_sc_score:
            self.lineEdit_scsid_score.clear()
            self.lineEdit_scscore_score.clear()
            self.comboBox_sccid_score.setCurrentIndex(0)
        elif self.stackedWidget.currentWidget() == self.page_course_transcript:
            self.lineEdit_course_trans_cid.clear()
            self.lineEdit_course_trans_cname.clear()
        elif self.stackedWidget.currentWidget() == self.page_stu_transcript:
            self.lineEdit_stu_trans_sid.clear()
            self.lineEdit_stu_trans_sname.clear()
            self.radioButton_have_score.setChecked(False)
        elif self.stackedWidget.currentWidget() == self.page_tt:
            self.comboBox_ttcid.setCurrentIndex(0)
            self.comboBox_tttid.setCurrentIndex(0)
            self.lineEdit_startweek.clear()
            self.lineEdit_endweek.clear()
        elif self.stackedWidget.currentWidget() == self.page_ttr:
            self.comboBox_ttr_cidtid.setCurrentIndex(0)
            self.comboBox_ttrclassno.setCurrentIndex(0)
            self.comboBox_ttrdayno.setCurrentIndex(0)
            self.comboBox_ttrrid.setCurrentIndex(0)
